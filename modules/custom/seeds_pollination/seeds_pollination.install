<?php

/**
 * @file
 */

use Drupal\Core\Serialization\Yaml;

/**
 * Install 'seeds_development' if 'views_ui' is enabled.
 */
function seeds_pollination_update_8101(&$sandbox) {
  $module_handler = \Drupal::moduleHandler();
  if ($module_handler->moduleExists('views_ui')) {
    /** @var \Drupal\Core\Extension\ModuleInstallerInterface $module_installer */
    $module_installer = \Drupal::service('module_installer');
    $module_installer->install(['seeds_development']);
  }
}

/**
 * Add 'translations.yml' file.
 */
function seeds_pollination_update_8102(&$sandbox) {
  $content = [
    'ar' => [
      'Example' => 'مثال',
    ],
  ];
  $translations_path = DRUPAL_ROOT . '/translations.yml';
  if (!file_exists($translations_path)) {
    file_put_contents($translations_path, Yaml::encode($content));
  }
}

/**
 * Enable the new features on seeds pollination.
 */
function seeds_pollination_update_8103(&$sandbox) {
  $config = \Drupal::configFactory()->getEditable('seeds_pollination.settings');
  $config->set('display_unmasquerade_button', '1')->set('replace_permissions_form_route', '1')->save();
}

/**
 * Enable 'description' fields on all config entities.
 */
function seeds_pollination_update_8104(&$sandbox) {
  $config = \Drupal::configFactory()->getEditable('seeds_pollination.settings');
  $config->set('description_is_required_for_config_entities', '1')->save();
}

/**
 * Reupdates the seeds_pollination config.
 */
function seeds_pollination_update_8105(&$sandbox) {
  $path = DRUPAL_ROOT . '/' . \Drupal::moduleHandler()->getModule('seeds_pollination')->getPath() . '/config/install/seeds_pollination.settings.yml';
  $warn = FALSE;
  $content = file_get_contents($path);
  if ($content) {
    $data = Yaml::decode($content);
    $config = \Drupal::configFactory()->getEditable('seeds_pollination.settings');
    if (is_array($data)) {
      $config->setData($data)->save();
    } else {
      $warn = TRUE;
    }
  } else {
    $warn = TRUE;
  }

  if ($warn) {
    \Drupal::messenger()->addWarning('Failed to read config/install/seeds_polination.settings.yml');
  }
}

/**
 * Re-Reupdates the seeds_pollination config again.
 */
function seeds_pollination_update_8106(&$sandbox) {
  $path = DRUPAL_ROOT . '/' . \Drupal::moduleHandler()->getModule('seeds_pollination')->getPath() . '/config/install/seeds_pollination.settings.yml';
  $warn = FALSE;
  $content = file_get_contents($path);
  if ($content) {
    $data = Yaml::decode($content);
    $config = \Drupal::configFactory()->getEditable('seeds_pollination.settings');
    if (is_array($data)) {
      $config->setData($data)->save();
    } else {
      $warn = TRUE;
    }
  } else {
    $warn = TRUE;
  }

  if ($warn) {
    \Drupal::messenger()->addWarning('Failed to read config/install/seeds_polination.settings.yml');
  }
}

/*
 * Enable forcing small letter extensions for file uploads.
 */
function seeds_pollination_update_8107(&$sandbox) {
  $config = \Drupal::configFactory()->getEditable('seeds_pollination.settings');
  $config->set('small_letters_extension', '1')->save();
}

/**
 * Enable 'disable user 1 edit' config
 *
 */
function seeds_pollination_update_8108() {
  $config = \Drupal::configFactory()->getEditable('seeds_pollination.settings');
  $config->set('disable_user_1_edit', '1')->save();

  // Check if the module already exists.
  if (\Drupal::moduleHandler()->moduleExists('disable_user_1_edit')) {
    \Drupal::messenger()->addWarning(t('The module "disable_user_1_edit" should be disabled now, "seeds_pollination" already provides this feature. Check the configuration form of "seeds_pollination"'));
  }
}