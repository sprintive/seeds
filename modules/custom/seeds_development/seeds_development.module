<?php

/**
 * @file
 * Contains seeds_development.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function seeds_development_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
  // Main module help for the seeds_development module.
  case 'help.page.seeds_development':
    $output = '';
    $output .= '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('Provides helpful functionalities for developers') . '</p>';
    return $output;

  default:
  }
}

function create_inspect_operation($route_name, $params = []) {
  return [
    'title' => t('Inspect'),
    'url' => Url::fromRoute($route_name, $params),
    'weight' => 99,
  ];
}

/**
 * Implements hook_entity_operation_alter().
 */

function seeds_development_entity_operation_alter(array &$operations, \Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->getEntityTypeId() == "image_style") {
    /** @var \Drupal\image\Entity\ImageStyle $entity */
    $operations['inspect'] = create_inspect_operation('seeds_development.image_style', ['image_style' => $entity->id()]);
  }
}

/**
 * Implements hook_form_alter().
 */

function seeds_development_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  if ($form_id == 'node_type_edit_form') {
    /** @var \Drupal\seeds_development\FormPermissions $form_permissions */
    $form_permissions = \Drupal::service('seeds_development.form_permissions');
    $form['actions']['submit']['#submit'][] = 'entity_type_permissions_set';

    /** @var \Drupal\node\NodeTypeInterface $node_type */
    $node_type = $form_state->getFormObject()->getEntity();
    $permissions = $form_permissions->getNodePermissions($node_type->id());
    $form['permissions'] = $form_permissions->buildPermissionsCheckboxes($permissions);
  }

  if ($form_id == "taxonomy_vocabulary_form") {
    /** @var \Drupal\seeds_development\FormPermissions $form_permissions */
    $form_permissions = \Drupal::service('seeds_development.form_permissions');
    $form['actions']['submit']['#submit'][] = 'entity_type_permissions_set';

    /** @var \Drupal\taxonomy\VocabularyInterface $vocabulary */
    $vocabulary = $form_state->getFormObject()->getEntity();
    $permissions = $form_permissions->getVocabularyPermissions($vocabulary->id());
    $form['permissions'] = $form_permissions->buildPermissionsCheckboxes($permissions);
  }
}