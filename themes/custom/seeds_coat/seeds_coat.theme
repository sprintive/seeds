<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;
/**
 * Implements hook_theme().
 */
function seeds_coat_theme($existing, $type, $theme, $path) {
  return [
    'blazy_loader' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function seeds_coat_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {

  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = [
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  ];
      $form['components']['blazy'] = [
      '#type' => 'details',
      '#tree' => TRUE,
      '#title' => t("Blazy"),
    ];

    $form['components']['blazy']['override'] = [
      '#type' => 'checkbox',
      '#title' => t('Override blazy loader?'),
      '#default_value' => theme_get_setting('blazy')['override'],
    ];

    $form['components']['blazy']['loader'] = [
      '#type' => 'textfield',
      '#title' => t('Loader Image URI'),
      '#default_value' => theme_get_setting('blazy')['loader'],
      '#states' => [
        'disabled' => [
          '[name="override_blazy_loader"]' => ['checked' => FALSE],
        ],
      ],
    ];

    $form['components']['blazy']['background_color'] = [
      '#type' => 'color',
      '#title' => t('Background Color'),
      '#default_value' => theme_get_setting('blazy')['background_color'],
      '#description' => t('Use css background, e.g. "#333333"'),
      '#states' => [
        'disabled' => [
          '[name="override_blazy_loader"]' => ['checked' => FALSE],
        ],
      ],
    ];
}
/**
 * Implements hook_preprocess_HOOK().
 */
function seeds_coat_preprocess_blazy(&$variables) {

  // Override blazy loader.
  $blazy_config = theme_get_setting('blazy');
  if ($blazy_config['override']) {
    $image_url = $blazy_config['loader'];
    $variables['image']['#theme_wrappers'] = [
      'blazy_loader' => [
      ],
    ];
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function seeds_coat_preprocess_blazy_loader(&$variables) {
  $blazy_config = theme_get_setting('blazy');
  $image_url = $blazy_config['loader'];
  $background_color = $blazy_config['background_color'];
  $variables['background_attributes'] = [
    'style' => "background-color: $background_color;",
  ];
  $variables['attributes'] = [
    'style' => "background-image: url($image_url);",
  ];
}

/**
 * Implements hook_library_info_alter().
 */
function seeds_coat_library_info_alter(&$libraries, $extension) {
  // Replace blazy loader css with the theme css.
  $blazy_override_enabled = theme_get_setting('blazy')['override'];
  if ($extension == "blazy" && $blazy_override_enabled) {
    $libraries["loading"]["css"]["component"] = ["/" . drupal_get_path("theme", "seeds_coat") . "/css/blazy-loader.css" => []];
  }
}